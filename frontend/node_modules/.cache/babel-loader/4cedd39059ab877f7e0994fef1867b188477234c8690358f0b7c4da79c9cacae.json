{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ngxho\\\\Downloads\\\\photo-app-\\\\photo-app-\\\\frontend\\\\src\\\\components\\\\Login\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Typography, TextField, Button, Snackbar } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login({\n  onLogin\n}) {\n  _s();\n  const [loginName, setLoginName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:8081/api/user/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          login_name: loginName,\n          password\n        })\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        console.log(userData);\n        onLogin(userData);\n        navigate(`/users/${userData._id}`); // Redirect to '/users' after successful login\n      } else {\n        console.error(\"Login failed:\", response.statusText);\n        setOpenSnackbar(true); // Display Snackbar on login failure\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error.message);\n      setOpenSnackbar(true); // Display Snackbar on login error\n    }\n  };\n  const handleCloseSnackbar = () => {\n    setOpenSnackbar(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-title\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        fontWeight: 800,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Login Name\",\n        value: loginName,\n        onChange: e => setLoginName(e.target.value),\n        fullWidth: true,\n        margin: \"normal\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Password\",\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        fullWidth: true,\n        margin: \"normal\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openSnackbar,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      message: \"Login failed. Please try again.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"swm4j8NIOui14WXuf1QoQoNMGyQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Typography","TextField","Button","Snackbar","useNavigate","jsxDEV","_jsxDEV","Login","onLogin","_s","loginName","setLoginName","password","setPassword","openSnackbar","setOpenSnackbar","navigate","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","login_name","ok","userData","json","console","log","_id","error","statusText","message","handleCloseSnackbar","children","className","variant","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","value","onChange","e","target","fullWidth","margin","required","type","color","open","autoHideDuration","onClose","_c","$RefreshReg$"],"sources":["C:/Users/ngxho/Downloads/photo-app-/photo-app-/frontend/src/components/Login/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Typography, TextField, Button, Snackbar } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\n\r\nfunction Login({ onLogin }) {\r\n  const [loginName, setLoginName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [openSnackbar, setOpenSnackbar] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const response = await fetch(`http://localhost:8081/api/user/login`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ login_name: loginName, password }),\r\n      });\r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n        console.log(userData);\r\n        onLogin(userData);\r\n        navigate(`/users/${userData._id}`); // Redirect to '/users' after successful login\r\n      } else {\r\n        console.error(\"Login failed:\", response.statusText);\r\n        setOpenSnackbar(true); // Display Snackbar on login failure\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error.message);\r\n      setOpenSnackbar(true); // Display Snackbar on login error\r\n    }\r\n  };\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"form-title\">\r\n        <Typography variant=\"h4\" fontWeight={800}>\r\n          Login\r\n        </Typography>\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          label=\"Login Name\"\r\n          value={loginName}\r\n          onChange={(e) => setLoginName(e.target.value)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n        <TextField\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          Login\r\n        </Button>\r\n      </form>\r\n      <Snackbar\r\n        open={openSnackbar}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseSnackbar}\r\n        message=\"Login failed. Please try again.\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}